name: "Publish Snap Release"

on:
  workflow_dispatch:
    inputs:
      publish-wallet-snap:
        type: boolean
        required: false
        description: "Publish the hedera-wallet-snap package"
      publish-identify-snap:
        type: boolean
        required: false
        description: "Publish the hedera-identify-snap package"
      dry-run-enabled:
        description: "Dry Run Enabled"
        type: boolean
        required: false

defaults:
  run:
    shell: bash

permissions:
  contents: write

env:
  NODE_VERSION: 18
  PNPM_VERSION: 0.10.0

jobs:
  prepare-matrix:
    runs-on: smart-contracts-linux-medium
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate Matrix
        id: set-matrix
        run: |
          MATRIX='{"matrix":[]}'
          if [[ "${{ github.event.inputs.publish-wallet-snap }}" == "true" ]] && [[ "${{ github.event.inputs.publish-identify-snap }}" == "true" ]]; then
            MATRIX='{"matrix":[{"snap_name": "Wallet Snap", "path": "hedera-wallet-snap"},{"snap_name": "Identify Snap", "path": "hedera-identify-snap"}]}'
          elif [[ "${{ github.event.inputs.publish-wallet-snap }}" == "true" ]]; then
            MATRIX='{"matrix":[{"snap_name": "Wallet Snap", "path": "hedera-wallet-snap"}]}'
          elif [[ "${{ github.event.inputs.publish-identify-snap }}" == "true" ]]; then
            MATRIX='{"matrix":[{"snap_name": "Identify Snap", "path": "hedera-identify-snap"}]}'
          fi
          echo "$MATRIX"
          echo "matrix=$(echo "$MATRIX" | jq -c)" >> "$GITHUB_OUTPUT"

  publish-snap:
    needs: prepare-matrix
    name: Publish Snap Directory
    runs-on: smart-contracts-linux-medium

    strategy:
      matrix:
        include: ${{ fromJson(needs.prepare-matrix.outputs.matrix).matrix }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit
          disable-sudo: true

      - name: Publish ${{ matrix.snap_name }}
        if: ${{ matrix.enabled == 'true' }}
        env:
          SNAP_NAME: ${{ matrix.snap_name }}
        run: echo "Begin publishing ${SNAP_NAME}"

      - name: Install PNPM
        uses: step-security/action-setup@303e8a1dabc4295b9b4ca0f4198fd42f7861406e # v4.0.0
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Yarn
        run: pnpm install -g yarn

      - name: Checkout Code
        if: ${{ matrix.enabled == 'true' }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }} # does not exist yet :|

      - name: Publish ${{ matrix.snap_name }}
        if: ${{ matrix.enabled && !cancelled() }}
        env:
          PROJECT_DIRECTORY: packages/${{ matrix.path }}
          SNAP_DIRECTORY: packages/${{ matrix.path }}/packages/snap
          DRY_RUN: ${{ github.event.inputs.dry-run-enabled }}
        run: |
          cd ${SNAP_DIRECTORY}
          yarn install
          yarn run build

          PUBLISH_ARGS="--access public --no-git-checks"
          [[ "${DRY_RUN}" == "true" ]] && PUBLISH_ARGS="${PUBLISH_ARGS} --dry-run"
          
          # Add the registry authentication stanza with variable substitution to the .npmrc configuration file.
          echo "@hashgraph:registry=https://registry.npmjs.org/" >> ".npmrc"
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> ".npmrc"
          
          pnpm install
          pnpm publish ${PUBLISH_ARGS}
